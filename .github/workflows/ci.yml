name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker compose build

      - name: Install npm dependencies
        run: docker compose run --rm front npm install

      - name: Create .env.test file
        run: |
          echo NUXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} >> .env.test 
          echo NUXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} >> .env.test 
          echo NUXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env.test 
          echo NUXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} >> .env.test 
          echo NUXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> .env.test 
          echo NUXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} >> .env.test

      - name: Run lint checks
        run: docker compose run --rm front npm run lint

      - name: Run tests
        run: docker compose run --rm front npm run test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install npm dependencies
        run: docker compose run --rm front npm install

      - name: Build Project in Docker
        run: docker compose run --rm front npm run build
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-version: latest
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}


